
R version 2.15.0 (2012-03-30)
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #drafted by Lauren Hodgson <lhodgson86@gmail.com>
> #GNU General Public License .. feel free to use / distribute ... no warranties
> 
> ################################################################################
> ################################################################################
> 
> #get the command line arguements
> args=(commandArgs(TRUE)); for(i in 1:length(args)) { eval(parse(text=args[[i]])) }
> #should have read in e.g.,
> #spp='u1b'
> #spp='u2'
> #spp='u11a'
> #spp='u214'
> #spp='250a'
> library(SDMTools); library(maptools) #load the necessary libraries
Loading required package: foreign
Loading required package: sp
Loading required package: lattice
Checking rgeos availability: TRUE
> 
> 
> image.dir = "/home/jc148322/Bird_NARP/images/"
> 
> 
> base.asc = read.asc.gz('/home/jc165798/Climate/CIAS/Australia/5km/baseline.76to05/base.asc.gz') #read in the base asc file
> pos = read.csv('/home/jc165798/Climate/CIAS/Australia/5km/baseline.76to05/base.positions.csv',as.is=TRUE) #read in the position files
> 
> cellarea = grid.area(base.asc) #get the area of individual cells
> pos$area = cellarea[cbind(pos$row,pos$col)] #append the cell area
> aust.area=sum(pos$area)#area of terrestrial australia
> 
> 
> bird.data=read.csv('/home/jc148322/Bird_NARP/raw.data/ClimModels.csv')#get bird spp
> common.name=as.character(bird.data$ClimName[which(bird.data$ClimID==spp)])
> 
> ###################################
> 
> spp.dir = paste('/home/jc165798/working/NARP_birds/models_1km/',spp,'/',sep=''); setwd(spp.dir) #define the overarching species directory
> 
> ###################################
> #Bring in all the necessary information
> threshold = read.csv('output/maxentResults.csv'); threshold = threshold[which(threshold$Species==spp),] #read in teh maxent data and only keep info for the species of interest
> 
> 
> ###################################
> #determine which threshold to use, and apply to pot.mat
> 
> if (threshold$Minimum.training.presence.area>0.8){
+ 	threshold = threshold$Equate.entropy.of.thresholded.and.original.distributions.logistic.threshold[1]/2
+ }else {
+ 	threshold = threshold$Equate.entropy.of.thresholded.and.original.distributions.logistic.threshold[1]#extract the species threshold value
+ }
> spp.dir = paste('/home/jc148322/Bird_NARP/species.outputs_1km/',spp,'/',sep=''); setwd(spp.dir) #define the overarching species directory
> load(file=paste(spp.dir,spp,'.potential.dist.mat.Rdata',sep='')) #load the potential matrix
> pot.mat[which(pot.mat<threshold)] = 0 # change anything < threshold to 0
> 
> ###################################
> #overlay polygons
> spp.dir = paste('/home/jc148322/Bird_NARP/species.outputs/',spp,'/',sep=''); setwd(spp.dir) #define the overarching species directory
> files=list.files(pattern='tpoly')
> if (length(files)==0){tpolys=NULL
+ }else{
+ tpolys = readShapePoly('tpoly.shp') }#read in the polygon files
> 
> spp.dir = paste('/home/jc148322/Bird_NARP/species.outputs_1km/',spp,'/',sep=''); setwd(spp.dir) #define the overarching species directory
> ###################################
> #Create asciis
> #RCP85
> cois=grep('RCP85', colnames(pot.mat), value=T) #determine columns of interest - RCP85
> pot.mat2=pot.mat[,cois]#subset columns of interest
> 
> RCP85.quant=t(apply(pot.mat2[,],1,function(x) { return(quantile(x,0.5,na.rm=TRUE,type=8)) })) #get the percentiles
> 
> RCP85.asc=base.asc; RCP85.asc[cbind(pos$row,pos$col)]=RCP85.quant #create the asciis
Warning message:
In RCP85.asc[cbind(pos$row, pos$col)] = RCP85.quant :
  number of items to replace is not a multiple of replacement length
> 
> #RCP45
> cois=grep('RCP6', colnames(pot.mat), value=T) #determine columns of interest - RCP85
> pot.mat2=pot.mat[,cois]#subset columns of interest
> 
> RCP6.quant=t(apply(pot.mat2[,],1,function(x) { return(quantile(x,0.5,na.rm=TRUE,type=8)) })) #get the percentiles
